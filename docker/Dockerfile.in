
USER root
# Make sure that /usr/include/linux/fb.h is present:
ARG pkg_linux_headers
RUN @install@ $pkg_linux_headers

USER user
WORKDIR /home/user

## Build LuaJIT for the reMarkable tablet.
#@if-ljrM: RUN git clone luajit-2.1 ./luajit-2.1-rM
#@if-ljrM: RUN (cd luajit-2.1 && commit=`git rev-parse --verify HEAD` && cd ../luajit-2.1-rM && git checkout $commit)

#@if-ljrM: WORKDIR /home/user/luajit-2.1-rM
# NOTE: the reMarkable toolchain also has '-march=armv7-a' but that seems redundant
#  because it's implied by Cortex-A9.
#@if-ljrM: RUN sed -i 's/^CCOPT_arm=$/CCOPT_arm= -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a9/' ./src/Makefile
#@if-ljrM: RUN make -j4
#@if-ljrM: RUN sha256sum src/luajit | grep -q f2cb88f51d0add0440ba86da04602b249d415f7cf10a9ec40b4f0f8529163f54
#@if-ljrM: WORKDIR /home/user

########## Check out and build ljremarkable ##########

USER root
# Install conditional run-time library dependencies (libX11.so.6 and libXtst.so.6).
# For the resulting '.app.lua', we want 'xlib.lua' to be included unconditionally,
# therefore the 'require()' for it must succeed.
ARG pkg_libxtst
RUN @install@ $pkg_libxtst
# For arm32v7/debian, make sure dependencies to generate .charpics are available:
#  - /usr/share/X11/xkb/symbols/us
#  - /usr/include/X11/keysymdef.h
#  - FreeType 2 headers
#@if-ljrM: RUN @install@ xkb-data x11proto-dev libfreetype6-dev
USER user

COPY ./additional.git/ ./ljremarkable.git/

# Create a non-bare repository:
RUN git clone ./ljremarkable.git ./ljremarkable

WORKDIR ljremarkable

RUN sed -i 's|https://github.com/helixhorned/ljclang|../ljclang|g' .gitmodules
RUN git submodule init
RUN git submodule update ljclang

# Avoid checking out the whole libremarkable repository. We only need one header.
RUN mkdir -p libremarkable/legacy-c-impl/libremarkable
WORKDIR libremarkable/legacy-c-impl/libremarkable
RUN wget https://raw.githubusercontent.com/canselcik/libremarkable/master/legacy-c-impl/libremarkable/lib.h
RUN sha256sum lib.h | grep -q 2e718a10e9c47e4cde5387e834b1a0d76964378cf6247e8e045bf92f6d1a6db4
WORKDIR ../../..

# For arm32v7/debian, make sure the font to generate .charpics from is available:
#@if-ljrM: RUN git submodule update fonts/quicksand

# Build the application.
RUN cp -a /home/user/ljclang/Makefile ljclang/
RUN git submodule update moonglow
RUN DISPLAY=dummy make app
#@if-ljrM: RUN make layouts/.charpics

# Build the debugging setup module.
RUN LJREMARKABLE_SETUP_rM_USE_DUMMY_FB=1 make _setup_rM-app.lua
